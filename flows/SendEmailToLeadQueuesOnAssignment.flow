<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>SFDC-5977 alert for flow to send email to lead owner i.e. lead queue</description>
        <name>SendEmailToQueue</name>
        <label>Send Email To Queue</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <actionName>Lead.EmailAlertForLeadAssignment</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Lead.EmailAlertForLeadAssignment</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>Assign the Queue Id to a variable to query queue members and queue email</description>
        <name>SetQueueName</name>
        <label>SetQueueName</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <assignmentItems>
            <assignToReference>QueueId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendEmailToQueue</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CheckIfOwnerIsOneOfTheQueues</name>
        <label>CheckIfOwnerIsOneOfTheQueues</label>
        <locationX>182</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>QueueusMatched</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IssuerSolutionsAPAC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IssuerSolutionsAmericas</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IssuerSolutionsEMEA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPREOPMAMER</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPREOPMAPAC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPREOPMEMEA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EconomicCountryRiskAmericas</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EconomicCountryRiskAPAC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EconomicCountryRiskEMEA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MSFTrialsGlobal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GMGBRSTGlobal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RegulatoryComplianceGlobal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FinancialRiskAnalyticsGlobal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LeadGenerationTeamAmericas</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LeadGenerationTeamEMEA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LeadGenerationTeamAPAC</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetQueueName</targetReference>
            </connector>
            <label>QueueusMatched</label>
        </rules>
    </decisions>
    <description>SFDC-5597 due to limitation with Lead Assignment rules and REST API for emails. As a workaround creating this flow to handle emails
SFDC-5814 - GMGBRSTGlobal queue added (hotfix)
SFDC-5825 - Amendment in KY3P and KYC lead management
SFDC-5894 - New Process-Financial Risk Analytics lead
US-5143927 : Update required in Lead Generation queue</description>
    <environments>Default</environments>
    <interviewLabel>SendEmailToLeadQueuesOnAssignment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Email To Lead Queues On Assignment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CheckIfOwnerIsOneOfTheQueues</targetReference>
        </connector>
        <filterFormula>ISNEW() || ISCHANGED( {!$Record.OwnerId})</filterFormula>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>2000</triggerOrder>
    <variables>
        <name>QueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
